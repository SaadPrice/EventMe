function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import request from './request';
import { UserApi } from './users';
import { OrganizationsApi } from './organizations';
export * from './constants';
var DEFAULT_API_URL = 'https://www.eventbriteapi.com/v3';

var makeRequest = function makeRequest(baseUrl, token) {
  return function (endpoint) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var url = "".concat(baseUrl).concat(endpoint);
    var requestOptions = options;

    if (token) {
      requestOptions = _objectSpread(_objectSpread({}, requestOptions), {}, {
        headers: _objectSpread(_objectSpread({}, requestOptions.headers || {}), {}, {
          Authorization: "Bearer ".concat(token)
        })
      });
    }

    return request(url, requestOptions);
  };
};

var eventbrite = function eventbrite() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$baseUrl = _ref.baseUrl,
      baseUrl = _ref$baseUrl === void 0 ? DEFAULT_API_URL : _ref$baseUrl,
      token = _ref.token;

  var jsonRequest = makeRequest(baseUrl, token);
  return {
    request: jsonRequest,
    users: new UserApi(jsonRequest),
    organizations: new OrganizationsApi(jsonRequest)
  };
};

export default eventbrite;