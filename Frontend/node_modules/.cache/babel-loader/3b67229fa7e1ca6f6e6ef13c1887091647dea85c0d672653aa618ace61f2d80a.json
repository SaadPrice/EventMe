{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignments\\\\EventMe\\\\Frontend\\\\src\\\\context\\\\AudioContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useRef, useState, useEffect } from 'react';\nimport audioFile from '../../public/MuswayStudio__Royalty_Free_Music_-_Background_Music__-_Ambient_Hip-Hop_-_3.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioContext = /*#__PURE__*/createContext();\nconst AudioProvider = ({\n  children\n}) => {\n  _s();\n  const audioRef = useRef(new Audio(audioFile));\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const audioElement = audioRef.current;\n    audioElement.loop = true;\n    if (isPlaying) {\n      audioElement.play();\n    } else {\n      audioElement.pause();\n    }\n  }, [isPlaying]);\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(AudioContext.Provider, {\n    value: {\n      isPlaying,\n      togglePlayPause\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioProvider, \"PqCJVnA8ptXzv4jf6ihO4CXpWRw=\");\n_c = AudioProvider;\nexport { AudioProvider, AudioContext };\nvar _c;\n$RefreshReg$(_c, \"AudioProvider\");","map":{"version":3,"names":["React","createContext","useRef","useState","useEffect","audioFile","jsxDEV","_jsxDEV","AudioContext","AudioProvider","children","_s","audioRef","Audio","isPlaying","setIsPlaying","audioElement","current","loop","play","pause","togglePlayPause","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Assignments/EventMe/Frontend/src/context/AudioContext.js"],"sourcesContent":["import React, { createContext, useRef, useState, useEffect } from 'react';\r\nimport audioFile from '../../public/MuswayStudio__Royalty_Free_Music_-_Background_Music__-_Ambient_Hip-Hop_-_3.mp3';\r\n\r\nconst AudioContext = createContext();\r\n\r\nconst AudioProvider = ({ children }) => {\r\n  const audioRef = useRef(new Audio(audioFile));\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const audioElement = audioRef.current;\r\n    audioElement.loop = true;\r\n    if (isPlaying) {\r\n      audioElement.play();\r\n    } else {\r\n      audioElement.pause();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  return (\r\n    <AudioContext.Provider value={{ isPlaying, togglePlayPause }}>\r\n      {children}\r\n    </AudioContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AudioProvider, AudioContext };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACzE,OAAOC,SAAS,MAAM,6FAA6F;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpH,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAIW,KAAK,CAACR,SAAS,CAAC,CAAC;EAC7C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAGJ,QAAQ,CAACK,OAAO;IACrCD,YAAY,CAACE,IAAI,GAAG,IAAI;IACxB,IAAIJ,SAAS,EAAE;MACbE,YAAY,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACLH,YAAY,CAACI,KAAK,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5BN,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAET,SAAS;MAAEO;IAAgB,CAAE;IAAAX,QAAA,EAC1DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChB,EAAA,CAvBIF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAyBnB,SAASA,aAAa,EAAED,YAAY;AAAG,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}