{"ast":null,"code":"// src//Api.js\nimport axios from 'axios';\nconsole.log(\"Api.js loaded\");\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\naxios.defaults.baseURL = API_BASE_URL;\nconst api = {\n  // User Authentication\n  register: userData => axios.post('/auth/register', userData),\n  login: credentials => axios.post('/auth/login', credentials),\n  deleteUser: token => axios.delete('/auth/delete', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  // Events\n  createEvent: (token, eventData) => axios.post('/events', eventData, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  getEvents: token => axios.get('/events', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  updateEvent: (token, eventId, updatedData) => axios.put(`/events/${eventId}`, updatedData, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  deleteEvent: (token, eventId) => axios.delete(`/events/${eventId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  // Eventbrite\n  fetchEventbriteEvents: (token, query, location) => axios.get('/events/eventbrite', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    params: {\n      q: query,\n      'location.address': location\n    }\n  }),\n  // Saved Events\n  saveEvent: (token, eventId) => axios.post('/saved-events/save', {\n    eventId\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  getUserSavedEvents: token => axios.get('/saved-events/my-saved-events', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  deleteSavedEvent: (token, savedEventId) => axios.delete(`/saved-events/delete-saved/${savedEventId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  // Tickets\n  buyTicket: (token, eventId, quantity) => axios.post('/tickets/buy', {\n    eventId,\n    quantity\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  getUserTickets: token => axios.get('/tickets/my-tickets', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  deleteTicket: (token, ticketId) => axios.delete(`/tickets/delete/${ticketId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","console","log","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","defaults","baseURL","api","register","userData","post","login","credentials","deleteUser","token","delete","headers","createEvent","eventData","getEvents","get","updateEvent","eventId","updatedData","put","deleteEvent","fetchEventbriteEvents","query","location","params","q","saveEvent","getUserSavedEvents","deleteSavedEvent","savedEventId","buyTicket","quantity","getUserTickets","deleteTicket","ticketId"],"sources":["C:/Assignments/EventMe/Frontend/src/components/Api.js"],"sourcesContent":["// src//Api.js\r\nimport axios from 'axios';\r\n\r\nconsole.log(\"Api.js loaded\")\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\r\n\r\naxios.defaults.baseURL = API_BASE_URL;\r\n\r\nconst api = {\r\n  // User Authentication\r\n  register: (userData) => axios.post('/auth/register', userData),\r\n  login: (credentials) => axios.post('/auth/login', credentials),\r\n  deleteUser: (token) => axios.delete('/auth/delete', {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  }),\r\n\r\n  // Events\r\n  createEvent: (token, eventData) => axios.post('/events', eventData, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  }),\r\n  getEvents: (token) => axios.get('/events', {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  }),\r\n  updateEvent: (token, eventId, updatedData) => axios.put(`/events/${eventId}`, updatedData, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  }),\r\n  deleteEvent: (token, eventId) => axios.delete(`/events/${eventId}`, {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  }),\r\n\r\n  // Eventbrite\r\n  fetchEventbriteEvents: (token, query, location) => axios.get('/events/eventbrite', {\r\n    headers: { 'Authorization': `Bearer ${token}` },\r\n    params: { q: query, 'location.address': location }\r\n  }),\r\n\r\n  // Saved Events\r\n  saveEvent: (token, eventId) => axios.post('/saved-events/save', { eventId }, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` }\r\n  }),\r\n  getUserSavedEvents: (token) => axios.get('/saved-events/my-saved-events', {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  }),\r\n  deleteSavedEvent: (token, savedEventId) => axios.delete(`/saved-events/delete-saved/${savedEventId}`, {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  }),\r\n\r\n  // Tickets\r\n  buyTicket: (token, eventId, quantity) => axios.post('/tickets/buy', { eventId, quantity }, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` }\r\n  }),\r\n  getUserTickets: (token) => axios.get('/tickets/my-tickets', {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  }),\r\n  deleteTicket: (token, ticketId) => axios.delete(`/tickets/delete/${ticketId}`, {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  })\r\n};\r\n\r\nexport default api;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}