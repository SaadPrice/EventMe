{"ast":null,"code":"import React,{createContext,useRef,useState,useEffect}from'react';import audioFile from'../assets/MuswayStudio__Royalty_Free_Music_-_Background_Music__-_Ambient_Hip-Hop_-_3.mp3';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioContext=/*#__PURE__*/createContext();const AudioProvider=_ref=>{let{children}=_ref;const audioRef=useRef(new Audio(audioFile));const[isPlaying,setIsPlaying]=useState(false);useEffect(()=>{const audioElement=audioRef.current;audioElement.loop=true;if(isPlaying){audioElement.play();}else{audioElement.pause();}},[isPlaying]);const togglePlayPause=()=>{setIsPlaying(!isPlaying);};return/*#__PURE__*/_jsxs(AudioContext.Provider,{value:{isPlaying,togglePlayPause},children:[children,/*#__PURE__*/_jsx(\"button\",{onClick:togglePlayPause,children:isPlaying?'Pause Music':'Play Music'})]});};export{AudioProvider,AudioContext};","map":{"version":3,"names":["React","createContext","useRef","useState","useEffect","audioFile","jsx","_jsx","jsxs","_jsxs","AudioContext","AudioProvider","_ref","children","audioRef","Audio","isPlaying","setIsPlaying","audioElement","current","loop","play","pause","togglePlayPause","Provider","value","onClick"],"sources":["C:/Assignments/EventMe/Frontend/src/context/AudioContext.js"],"sourcesContent":["import React, { createContext, useRef, useState, useEffect } from 'react';\r\nimport audioFile from '../assets/MuswayStudio__Royalty_Free_Music_-_Background_Music__-_Ambient_Hip-Hop_-_3.mp3';\r\n\r\nconst AudioContext = createContext();\r\n\r\nconst AudioProvider = ({ children }) => {\r\n  const audioRef = useRef(new Audio(audioFile));\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const audioElement = audioRef.current;\r\n    audioElement.loop = true;\r\n    if (isPlaying) {\r\n      audioElement.play();\r\n    } else {\r\n      audioElement.pause();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  return (\r\n    <AudioContext.Provider value={{ isPlaying, togglePlayPause }}>\r\n      {children}\r\n      <button onClick={togglePlayPause}>\r\n        {isPlaying ? 'Pause Music' : 'Play Music'}\r\n      </button>\r\n    </AudioContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AudioProvider, AudioContext };\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACzE,MAAO,CAAAC,SAAS,KAAM,0FAA0F,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjH,KAAM,CAAAC,YAAY,cAAGT,aAAa,CAAC,CAAC,CAEpC,KAAM,CAAAU,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjC,KAAM,CAAAE,QAAQ,CAAGZ,MAAM,CAAC,GAAI,CAAAa,KAAK,CAACV,SAAS,CAAC,CAAC,CAC7C,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAEjDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,YAAY,CAAGJ,QAAQ,CAACK,OAAO,CACrCD,YAAY,CAACE,IAAI,CAAG,IAAI,CACxB,GAAIJ,SAAS,CAAE,CACbE,YAAY,CAACG,IAAI,CAAC,CAAC,CACrB,CAAC,IAAM,CACLH,YAAY,CAACI,KAAK,CAAC,CAAC,CACtB,CACF,CAAC,CAAE,CAACN,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAO,eAAe,CAAGA,CAAA,GAAM,CAC5BN,YAAY,CAAC,CAACD,SAAS,CAAC,CAC1B,CAAC,CAED,mBACEP,KAAA,CAACC,YAAY,CAACc,QAAQ,EAACC,KAAK,CAAE,CAAET,SAAS,CAAEO,eAAgB,CAAE,CAAAV,QAAA,EAC1DA,QAAQ,cACTN,IAAA,WAAQmB,OAAO,CAAEH,eAAgB,CAAAV,QAAA,CAC9BG,SAAS,CAAG,aAAa,CAAG,YAAY,CACnC,CAAC,EACY,CAAC,CAE5B,CAAC,CAED,OAASL,aAAa,CAAED,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}