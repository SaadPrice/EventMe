{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignments\\\\EventMe\\\\Frontend\\\\src\\\\pages\\\\ToursPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Api from '../components/Api'; // Ensure the correct path to Api\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToursPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await Api.getEvents(token);\n        const tours = response.data.filter(event => event.type === 'Tour'); // Adjust according to your data structure\n        setEvents(tours);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [new Date(event.date).toLocaleDateString(), \" \", new Date(event.date).toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ToursPage, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = ToursPage;\nexport default ToursPage;\nvar _c;\n$RefreshReg$(_c, \"ToursPage\");","map":{"version":3,"names":["React","useEffect","useState","Api","jsxDEV","_jsxDEV","ToursPage","_s","events","setEvents","fetchEvents","token","localStorage","getItem","response","getEvents","tours","data","filter","event","type","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","Date","date","toLocaleDateString","toLocaleTimeString","location","id","_c","$RefreshReg$"],"sources":["C:/Assignments/EventMe/Frontend/src/pages/ToursPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Api from '../components/Api'; // Ensure the correct path to Api\r\n\r\nconst ToursPage = () => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await Api.getEvents(token);\r\n        const tours = response.data.filter(event => event.type === 'Tour'); // Adjust according to your data structure\r\n        setEvents(tours);\r\n      } catch (error) {\r\n        console.error('Error fetching events:', error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tours</h1>\r\n      {events.map((event) => (\r\n        <div key={event.id}>\r\n          <h2>{event.title}</h2>\r\n          <p>{new Date(event.date).toLocaleDateString()} {new Date(event.date).toLocaleTimeString()}</p>\r\n          <p>{event.location}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToursPage;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,SAAS,CAACJ,KAAK,CAAC;QAC3C,MAAMK,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;QACpEX,SAAS,CAACO,KAAK,CAAC;MAClB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDX,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbnB,MAAM,CAACoB,GAAG,CAAET,KAAK,iBAChBd,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAKJ,KAAK,CAACU;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBtB,OAAA;QAAAkB,QAAA,GAAI,IAAIO,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAC,GAAC,EAAC,IAAIF,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC,CAACE,kBAAkB,CAAC,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9FtB,OAAA;QAAAkB,QAAA,EAAIJ,KAAK,CAACe;MAAQ;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHfR,KAAK,CAACgB,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9BID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}