{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignments\\\\EventMe\\\\Frontend\\\\src\\\\components\\\\SavedEventButton.js\";\n// src/components/SavedEventButton.js\n\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SavedEventButton = ({\n  eventId\n}) => {\n  const handleSave = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const res = await axios.post('/api/saved-events/save', {\n        eventId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log(res.data);\n      // Optionally, you can show a success message to the user\n      alert('Event saved successfully');\n    } catch (err) {\n      console.error(err);\n      // Optionally, you can show an error message to the user\n      alert('Failed to save event');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"save-button\",\n    onClick: handleSave,\n    children: \"Save Event\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = SavedEventButton;\nexport default SavedEventButton;\nvar _c;\n$RefreshReg$(_c, \"SavedEventButton\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","SavedEventButton","eventId","handleSave","token","localStorage","getItem","console","error","res","post","headers","log","data","alert","err","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Assignments/EventMe/Frontend/src/components/SavedEventButton.js"],"sourcesContent":["// src/components/SavedEventButton.js\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SavedEventButton = ({ eventId }) => {\r\n  const handleSave = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      const res = await axios.post('/api/saved-events/save', { eventId }, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n\r\n      console.log(res.data);\r\n      // Optionally, you can show a success message to the user\r\n      alert('Event saved successfully');\r\n    } catch (err) {\r\n      console.error(err);\r\n      // Optionally, you can show an error message to the user\r\n      alert('Failed to save event');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"save-button\" onClick={handleSave}>Save Event</button>\r\n  );\r\n};\r\n\r\nexport default SavedEventButton;\r\n\r\n\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACxC,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVG,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;QAC/B;MACF;MAEA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,wBAAwB,EAAE;QAAER;MAAQ,CAAC,EAAE;QAClES,OAAO,EAAE;UAAE,eAAe,EAAE,UAAUP,KAAK;QAAG;MAChD,CAAC,CAAC;MAEFG,OAAO,CAACK,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;MACrB;MACAC,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZR,OAAO,CAACC,KAAK,CAACO,GAAG,CAAC;MAClB;MACAD,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEd,OAAA;IAAQgB,SAAS,EAAC,aAAa;IAACC,OAAO,EAAEd,UAAW;IAAAe,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAE5E,CAAC;AAACC,EAAA,GA1BItB,gBAAgB;AA4BtB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}