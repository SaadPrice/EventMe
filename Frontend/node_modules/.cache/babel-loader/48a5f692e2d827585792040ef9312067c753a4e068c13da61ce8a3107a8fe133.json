{"ast":null,"code":"import React from'react';import{festivals}from'../MockData';import SavedEventButton from'../components/SavedEventButton';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FestivalsPage=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"festivals-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Festivals\"}),/*#__PURE__*/_jsx(\"ul\",{children:festivals.map(festival=>/*#__PURE__*/_jsxs(\"li\",{children:[festival.name,\" - \",festival.date,\" - \",festival.location,/*#__PURE__*/_jsx(SavedEventButton,{eventId:festival.id})]},festival.id))})]});};export default FestivalsPage;","map":{"version":3,"names":["React","festivals","SavedEventButton","jsx","_jsx","jsxs","_jsxs","FestivalsPage","className","children","map","festival","name","date","location","eventId","id"],"sources":["C:/Assignments/EventMe/Frontend/src/pages/FestivalsPage.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { festivals } from '../MockData';\r\nimport SavedEventButton from '../components/SavedEventButton';\r\n\r\nconst FestivalsPage = () => {\r\n  return (\r\n    <div className=\"festivals-page\">\r\n      <h1>Festivals</h1>\r\n      <ul>\r\n        {festivals.map(festival => (\r\n          <li key={festival.id}>\r\n            {festival.name} - {festival.date} - {festival.location}\r\n            <SavedEventButton eventId={festival.id} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FestivalsPage;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,SAAS,KAAQ,aAAa,CACvC,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9D,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,mBACED,KAAA,QAAKE,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BL,IAAA,OAAAK,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBL,IAAA,OAAAK,QAAA,CACGR,SAAS,CAACS,GAAG,CAACC,QAAQ,eACrBL,KAAA,OAAAG,QAAA,EACGE,QAAQ,CAACC,IAAI,CAAC,KAAG,CAACD,QAAQ,CAACE,IAAI,CAAC,KAAG,CAACF,QAAQ,CAACG,QAAQ,cACtDV,IAAA,CAACF,gBAAgB,EAACa,OAAO,CAAEJ,QAAQ,CAACK,EAAG,CAAE,CAAC,GAFnCL,QAAQ,CAACK,EAGd,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}